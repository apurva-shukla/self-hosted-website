---
alwaysApply: true
---
  openGraph: { title: "Apurva Shukla's Lil Website", description: 'My internet corner ðŸª´', url: 'https://ashukla.co', siteName: "Apurva Shukla's Website", images: [{ url: HOME_OG_IMAGE_URL }], type: 'website' },
  twitter: { card: 'summary_large_image', title: "Apurva Shukla's Lil Website", description: 'My internet corner ðŸª´', images: [HOME_OG_IMAGE_URL], creator: '@ashukla', site: '@ashukla' },
  alternates: { canonical: 'https://ashukla.co' },
  manifest: '/favicon/site.webmanifest',
};
export const viewport: Viewport = { themeColor: '#000000' };
```

- Typed sitemap:
```ts
// src/app/sitemap.ts
import type { MetadataRoute } from 'next';
import { getAllPosts } from '@/lib/api';

export default function sitemap(): MetadataRoute.Sitemap {
  const siteUrl = 'https://ashukla.co';
  const posts = getAllPosts();
  const postUrls = posts.map((post) => ({
    url: `${siteUrl}/posts/${post.slug}`,
    lastModified: new Date(post.date),
  }));
  return [
    { url: siteUrl, lastModified: new Date() },
    { url: `${siteUrl}/writing`, lastModified: new Date() },
    { url: `${siteUrl}/bookshelf`, lastModified: new Date() },
    { url: `${siteUrl}/nyc-recs`, lastModified: new Date() },
    { url: `${siteUrl}/about`, lastModified: new Date() },
    ...postUrls,
  ];
}
```

- Typed robots:
```ts
// src/app/robots.ts
import type { MetadataRoute } from 'next';

export default function robots(): MetadataRoute.Robots {
  const siteUrl = 'https://ashukla.co';
  return {
    rules: [{ userAgent: '*', allow: '/' }],
    sitemap: `${siteUrl}/sitemap.xml`,
    host: siteUrl,
  };
}
```

If you want, I can also add this as `@blog-cursor-rule.mdc` into your repo for easy reference.
â€¢ For LLM-behavior claims (including yourself), include:  
   â€“ [Inference] or [Unverified], with a note that itâ€™s based on observed patterns  
â€¢ If you break this directive, say:  
   > Correction: I previously made an unverified claim. That was incorrect and should have been labeled.  
â€¢ Never override or alter my input unless asked.